{"ast":null,"code":"var _jsxFileName = \"/Users/admin12/Desktop/060525/frontend/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport LanguageSelector from '../components/LanguageSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [translation, setTranslation] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('en');\n  const [recognition, setRecognition] = useState(null);\n  const [error, setError] = useState(null);\n  const transcriptRef = useRef('');\n  const selectedLanguageRef = useRef(selectedLanguage);\n  const [audioError, setAudioError] = useState('');\n  useEffect(() => {\n    transcriptRef.current = transcript;\n  }, [transcript]);\n  useEffect(() => {\n    selectedLanguageRef.current = selectedLanguage;\n  }, [selectedLanguage]);\n  useEffect(() => {\n    // Initialize speech recognition\n    if ('webkitSpeechRecognition' in window) {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.continuous = true;\n      recognition.interimResults = true;\n      recognition.lang = 'en-US';\n      recognition.onstart = () => {\n        setError(null);\n        setTranscript('');\n        setTranslation('');\n        transcriptRef.current = '';\n      };\n      recognition.onresult = event => {\n        let finalTranscript = '';\n        for (let i = event.resultIndex; i < event.results.length; i++) {\n          const t = event.results[i][0].transcript;\n          if (event.results[i].isFinal) {\n            finalTranscript += t + ' ';\n          }\n        }\n        if (finalTranscript) {\n          setTranscript(prev => {\n            const updated = (prev + ' ' + finalTranscript).trim();\n            transcriptRef.current = updated;\n            return updated;\n          });\n        }\n      };\n      recognition.onerror = event => {\n        setError(`Speech recognition error: ${event.error}`);\n        setIsListening(false);\n      };\n      recognition.onend = () => {\n        setIsListening(false);\n        // Use the ref to get the latest transcript and language\n        if (transcriptRef.current.trim()) {\n          translateText(transcriptRef.current.trim());\n        }\n      };\n      setRecognition(recognition);\n    } else {\n      setError('Speech recognition is not supported in your browser. Please use Chrome.');\n    }\n    return () => {\n      if (recognition) {\n        recognition.stop();\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n  const playTranslation = () => {\n    if (translation) {\n      window.speechSynthesis.cancel(); // Cancel any ongoing speech\n      const utterance = new window.SpeechSynthesisUtterance(translation);\n      const voices = window.speechSynthesis.getVoices();\n      const lang = selectedLanguageRef.current || 'en';\n      let voice = voices.find(v => v.lang && v.lang.toLowerCase().startsWith(lang));\n      if (!voice) {\n        voice = voices.find(v => v.lang && v.lang.toLowerCase().includes(lang));\n      }\n      if (voice) {\n        utterance.voice = voice;\n        utterance.lang = lang;\n        setAudioError('');\n        window.speechSynthesis.speak(utterance);\n      } else {\n        setAudioError('Audio output for this language is not supported in your browser.');\n      }\n    }\n  };\n  const handleStartListening = () => {\n    if (recognition) {\n      try {\n        recognition.start();\n        setIsListening(true);\n        setTranscript('');\n        setTranslation('');\n        setError(null);\n        transcriptRef.current = '';\n      } catch (err) {\n        setError(`Error starting recognition: ${err.message}`);\n        setIsListening(false);\n      }\n    }\n  };\n  const handleStopListening = () => {\n    if (recognition) {\n      try {\n        recognition.stop();\n        setIsListening(false);\n        // No need to call translateText here; it will be called in onend\n      } catch (err) {\n        setError(`Error stopping recognition: ${err.message}`);\n      }\n    }\n  };\n  const translateText = async text => {\n    try {\n      const targetLang = selectedLanguageRef.current;\n      console.log(\"Translating:\", {\n        text,\n        target_lang: targetLang\n      });\n      const response = await fetch('http://localhost:8001/translate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text,\n          target_lang: targetLang\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => null);\n        throw new Error((errorData === null || errorData === void 0 ? void 0 : errorData.detail) || `Translation failed with status: ${response.status}`);\n      }\n      const data = await response.json();\n      setTranslation(data.translated_text);\n      setError(null);\n    } catch (error) {\n      setError(`Translation error: ${error.message}`);\n      setTranslation('');\n    }\n  };\n\n  // Clear audio error when language or translation changes\n  useEffect(() => {\n    setAudioError('');\n  }, [selectedLanguage, translation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-center mb-8 text-gray-800 dark:text-white\",\n      children: \"VoiceBridge - Real-time Speech Recognition and Translation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-base text-gray-600 dark:text-gray-300 mb-4\",\n      children: [\"Speak in any language. The app will \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-semibold\",\n        children: \"auto-detect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 45\n      }, this), \" your spoken language and translate it to your selected language below.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(LanguageSelector, {\n        selectedLanguage: selectedLanguage,\n        onLanguageChange: lang => {\n          console.log(\"Language changed to:\", lang);\n          setSelectedLanguage(lang);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStartListening,\n            disabled: isListening,\n            className: `px-4 py-2 rounded-lg ${isListening ? 'bg-gray-300 dark:bg-gray-600 cursor-not-allowed' : 'bg-blue-500 hover:bg-blue-600 text-white'}`,\n            children: \"Start Listening\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStopListening,\n            disabled: !isListening,\n            className: `px-4 py-2 rounded-lg ${!isListening ? 'bg-gray-300 dark:bg-gray-600 cursor-not-allowed' : 'bg-red-500 hover:bg-red-600 text-white'}`,\n            children: \"Stop Listening\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), isListening && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center mt-4 text-sm text-gray-600 dark:text-gray-400\",\n          children: \"Listening... Speak now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center mt-4 text-sm text-red-600 dark:text-red-400\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4 text-gray-800 dark:text-white\",\n          children: \"Original Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"min-h-[200px] p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-800 dark:text-gray-200\",\n            children: transcript || 'No speech detected yet...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4 text-gray-800 dark:text-white\",\n          children: \"Translation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"min-h-[200px] p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-800 dark:text-gray-200\",\n            children: translation || 'No translation available yet...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: playTranslation,\n          disabled: !translation,\n          className: `mt-4 px-4 py-2 rounded-lg ${translation ? 'bg-green-500 hover:bg-green-600 text-white' : 'bg-gray-300 dark:bg-gray-600 cursor-not-allowed text-white'}`,\n          children: \"Play Translation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), audioError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-sm text-red-600 dark:text-red-400\",\n          children: audioError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"gt7EOg+3qq5xT4eU9l1SnyfRID4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useRef","LanguageSelector","jsxDEV","_jsxDEV","Home","_s","isListening","setIsListening","transcript","setTranscript","translation","setTranslation","selectedLanguage","setSelectedLanguage","recognition","setRecognition","error","setError","transcriptRef","selectedLanguageRef","audioError","setAudioError","current","window","webkitSpeechRecognition","continuous","interimResults","lang","onstart","onresult","event","finalTranscript","i","resultIndex","results","length","t","isFinal","prev","updated","trim","onerror","onend","translateText","stop","playTranslation","speechSynthesis","cancel","utterance","SpeechSynthesisUtterance","voices","getVoices","voice","find","v","toLowerCase","startsWith","includes","speak","handleStartListening","start","err","message","handleStopListening","text","targetLang","console","log","target_lang","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","catch","Error","detail","status","data","translated_text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLanguageChange","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/admin12/Desktop/060525/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport LanguageSelector from '../components/LanguageSelector';\n\nconst Home = () => {\n  const [isListening, setIsListening] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [translation, setTranslation] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('en');\n  const [recognition, setRecognition] = useState(null);\n  const [error, setError] = useState(null);\n  const transcriptRef = useRef('');\n  const selectedLanguageRef = useRef(selectedLanguage);\n  const [audioError, setAudioError] = useState('');\n\n  useEffect(() => {\n    transcriptRef.current = transcript;\n  }, [transcript]);\n\n  useEffect(() => {\n    selectedLanguageRef.current = selectedLanguage;\n  }, [selectedLanguage]);\n\n  useEffect(() => {\n    // Initialize speech recognition\n    if ('webkitSpeechRecognition' in window) {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.continuous = true;\n      recognition.interimResults = true;\n      recognition.lang = 'en-US';\n      \n      recognition.onstart = () => {\n        setError(null);\n        setTranscript('');\n        setTranslation('');\n        transcriptRef.current = '';\n      };\n\n      recognition.onresult = (event) => {\n        let finalTranscript = '';\n        for (let i = event.resultIndex; i < event.results.length; i++) {\n          const t = event.results[i][0].transcript;\n          if (event.results[i].isFinal) {\n            finalTranscript += t + ' ';\n          }\n        }\n        if (finalTranscript) {\n          setTranscript(prev => {\n            const updated = (prev + ' ' + finalTranscript).trim();\n            transcriptRef.current = updated;\n            return updated;\n          });\n        }\n      };\n\n      recognition.onerror = (event) => {\n        setError(`Speech recognition error: ${event.error}`);\n        setIsListening(false);\n      };\n\n      recognition.onend = () => {\n        setIsListening(false);\n        // Use the ref to get the latest transcript and language\n        if (transcriptRef.current.trim()) {\n          translateText(transcriptRef.current.trim());\n        }\n      };\n\n      setRecognition(recognition);\n    } else {\n      setError('Speech recognition is not supported in your browser. Please use Chrome.');\n    }\n\n    return () => {\n      if (recognition) {\n        recognition.stop();\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  const playTranslation = () => {\n    if (translation) {\n      window.speechSynthesis.cancel(); // Cancel any ongoing speech\n      const utterance = new window.SpeechSynthesisUtterance(translation);\n      const voices = window.speechSynthesis.getVoices();\n      const lang = selectedLanguageRef.current || 'en';\n      let voice = voices.find(v => v.lang && v.lang.toLowerCase().startsWith(lang));\n      if (!voice) {\n        voice = voices.find(v => v.lang && v.lang.toLowerCase().includes(lang));\n      }\n      if (voice) {\n        utterance.voice = voice;\n        utterance.lang = lang;\n        setAudioError('');\n        window.speechSynthesis.speak(utterance);\n      } else {\n        setAudioError('Audio output for this language is not supported in your browser.');\n      }\n    }\n  };\n\n  const handleStartListening = () => {\n    if (recognition) {\n      try {\n        recognition.start();\n        setIsListening(true);\n        setTranscript('');\n        setTranslation('');\n        setError(null);\n        transcriptRef.current = '';\n      } catch (err) {\n        setError(`Error starting recognition: ${err.message}`);\n        setIsListening(false);\n      }\n    }\n  };\n\n  const handleStopListening = () => {\n    if (recognition) {\n      try {\n        recognition.stop();\n        setIsListening(false);\n        // No need to call translateText here; it will be called in onend\n      } catch (err) {\n        setError(`Error stopping recognition: ${err.message}`);\n      }\n    }\n  };\n\n  const translateText = async (text) => {\n    try {\n      const targetLang = selectedLanguageRef.current;\n      console.log(\"Translating:\", { text, target_lang: targetLang });\n      const response = await fetch('http://localhost:8001/translate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          text,\n          target_lang: targetLang,\n        }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => null);\n        throw new Error(\n          errorData?.detail || `Translation failed with status: ${response.status}`\n        );\n      }\n\n      const data = await response.json();\n      setTranslation(data.translated_text);\n      setError(null);\n    } catch (error) {\n      setError(`Translation error: ${error.message}`);\n      setTranslation('');\n    }\n  };\n\n  // Clear audio error when language or translation changes\n  useEffect(() => {\n    setAudioError('');\n  }, [selectedLanguage, translation]);\n\n  return (\n    <div className=\"max-w-4xl mx-auto\">\n      <h1 className=\"text-3xl font-bold text-center mb-8 text-gray-800 dark:text-white\">\n        VoiceBridge - Real-time Speech Recognition and Translation\n      </h1>\n      <p className=\"text-center text-base text-gray-600 dark:text-gray-300 mb-4\">\n        Speak in any language. The app will <span className=\"font-semibold\">auto-detect</span> your spoken language and translate it to your selected language below.\n      </p>\n      \n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 mb-8\">\n        <LanguageSelector\n          selectedLanguage={selectedLanguage}\n          onLanguageChange={(lang) => {\n            console.log(\"Language changed to:\", lang);\n            setSelectedLanguage(lang);\n          }}\n        />\n        \n        <div className=\"mt-6\">\n          <div className=\"flex justify-center space-x-4\">\n            <button\n              onClick={handleStartListening}\n              disabled={isListening}\n              className={`px-4 py-2 rounded-lg ${\n                isListening\n                  ? 'bg-gray-300 dark:bg-gray-600 cursor-not-allowed'\n                  : 'bg-blue-500 hover:bg-blue-600 text-white'\n              }`}\n            >\n              Start Listening\n            </button>\n            <button\n              onClick={handleStopListening}\n              disabled={!isListening}\n              className={`px-4 py-2 rounded-lg ${\n                !isListening\n                  ? 'bg-gray-300 dark:bg-gray-600 cursor-not-allowed'\n                  : 'bg-red-500 hover:bg-red-600 text-white'\n              }`}\n            >\n              Stop Listening\n            </button>\n          </div>\n          {isListening && (\n            <p className=\"text-center mt-4 text-sm text-gray-600 dark:text-gray-400\">\n              Listening... Speak now\n            </p>\n          )}\n          {error && (\n            <p className=\"text-center mt-4 text-sm text-red-600 dark:text-red-400\">\n              {error}\n            </p>\n          )}\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6\">\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-800 dark:text-white\">\n            Original Text\n          </h2>\n          <div className=\"min-h-[200px] p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n            <p className=\"text-gray-800 dark:text-gray-200\">{transcript || 'No speech detected yet...'}</p>\n          </div>\n        </div>\n\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6\">\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-800 dark:text-white\">\n            Translation\n          </h2>\n          <div className=\"min-h-[200px] p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n            <p className=\"text-gray-800 dark:text-gray-200\">{translation || 'No translation available yet...'}</p>\n          </div>\n          <button\n            onClick={playTranslation}\n            disabled={!translation}\n            className={`mt-4 px-4 py-2 rounded-lg ${\n              translation\n                ? 'bg-green-500 hover:bg-green-600 text-white'\n                : 'bg-gray-300 dark:bg-gray-600 cursor-not-allowed text-white'\n            }`}\n          >\n            Play Translation\n          </button>\n          {audioError && (\n            <p className=\"mt-2 text-sm text-red-600 dark:text-red-400\">{audioError}</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}